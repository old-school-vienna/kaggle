Root Mean Squared Error (RMSE) on test data = 3.8747
Traceback (most recent call last):
  File "/opt/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 63, in deco
    return f(*a, **kw)
  File "/opt/spark/python/lib/py4j-0.10.7-src.zip/py4j/protocol.py", line 328, in get_return_value
    format(target_id, ".", name), value)
py4j.protocol.Py4JJavaError: An error occurred while calling o1206.fit.
: java.lang.IllegalArgumentException: Field "indexedFeatures" does not exist.
Available fields: year, month, dn, wday, snap, dept_id, item_id, store_id, sales, flag_ram, Sales_Pred, label, vitem_id, features, TrainValidationSplit_2b9448927ff1_rand
        at org.apache.spark.sql.types.StructType$$anonfun$apply$1.apply(StructType.scala:274)
        at org.apache.spark.sql.types.StructType$$anonfun$apply$1.apply(StructType.scala:274)
        at scala.collection.MapLike$class.getOrElse(MapLike.scala:128)
        at scala.collection.AbstractMap.getOrElse(Map.scala:59)
        at org.apache.spark.sql.types.StructType.apply(StructType.scala:273)
        at org.apache.spark.ml.util.SchemaUtils$.checkColumnType(SchemaUtils.scala:41)
        at org.apache.spark.ml.PredictorParams$class.validateAndTransformSchema(Predictor.scala:51)
        at org.apache.spark.ml.classification.Classifier.org$apache$spark$ml$classification$ClassifierParams$$super$validateAndTransformSchema(Classifier.scala:58)
        at org.apache.spark.ml.classification.ClassifierParams$class.validateAndTransformSchema(Classifier.scala:42)
        at org.apache.spark.ml.classification.ProbabilisticClassifier.org$apache$spark$ml$classification$ProbabilisticClassifierParams$$super$validateAndTransformSchema(ProbabilisticClassifier.scala:53)
        at org.apache.spark.ml.classification.ProbabilisticClassifierParams$class.validateAndTransformSchema(ProbabilisticClassifier.scala:37)
        at org.apache.spark.ml.classification.ProbabilisticClassifier.validateAndTransformSchema(ProbabilisticClassifier.scala:53)
        at org.apache.spark.ml.Predictor.transformSchema(Predictor.scala:144)
        at org.apache.spark.ml.PipelineStage.transformSchema(Pipeline.scala:74)
        at org.apache.spark.ml.Predictor.fit(Predictor.scala:100)
        at org.apache.spark.ml.Predictor.fit(Predictor.scala:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
        at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
        at py4j.Gateway.invoke(Gateway.java:282)
        at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
        at py4j.commands.CallCommand.execute(CallCommand.java:79)
        at py4j.GatewayConnection.run(GatewayConnection.java:238)
        at java.lang.Thread.run(Thread.java:748)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/project/pipeline.py", line 114, in pipeline
    besti: TrainValidationSplitModel = tvs.fit(train)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/base.py", line 132, in fit
    return self._fit(dataset)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/tuning.py", line 582, in _fit
    for j, metric, subModel in pool.imap_unordered(lambda f: f(), tasks):
  File "/usr/lib/python3.7/multiprocessing/pool.py", line 748, in next
    raise value
  File "/usr/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/tuning.py", line 582, in <lambda>
    for j, metric, subModel in pool.imap_unordered(lambda f: f(), tasks):
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/tuning.py", line 52, in singleTask
    index, model = next(modelIter)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/base.py", line 62, in __next__
    return index, self.fitSingleModel(index)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/base.py", line 106, in fitSingleModel
    return estimator.fit(dataset, paramMaps[index])
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/base.py", line 132, in fit
    return self._fit(dataset)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/wrapper.py", line 295, in _fit
    java_model = self._fit_java(dataset)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/ml/wrapper.py", line 292, in _fit_java
    return self._java_obj.fit(dataset._jdf)
  File "/opt/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 1257, in __call__
    answer, self.gateway_client, self.target_id, self.name)
  File "/opt/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 79, in deco
    raise IllegalArgumentException(s.split(': ', 1)[1], stackTrace)
pyspark.sql.utils.IllegalArgumentException: 'Field "indexedFeatures" does not exist.\nAvailable fields: year, month, dn, wday, snap, dept_id, item_id, store_id, sales, flag_ram, Sales_Pred, label, vitem_id, features, TrainValidationSplit_2b9448927ff1_rand'


+------------------------------------------------+
|model                                |mse       |
|------------------------------------------------|
|glr poisson identity                 |    3.8824|
|glr gaussian identity                |    3.1338|
|glr poisson log                      |    3.8747|
|gbt indexed features                 |    0.0000|
+------------------------------------------------+

Hyperparams: glr poisson identity
+-------model-----------------------------------------+
GeneralizedLinearRegression_4cedb24f8d7d
+-------params-----------------------------------------+
{Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='family', doc='The name of family which is a description of the error distribution to be used in the model. Supported options: gamma, binomial, poisson, gaussian, tweedie.'): 'poisson',
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='featuresCol', doc='features column name'): 'features',
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='fitIntercept', doc='whether to fit an intercept term'): True,
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='variancePower', doc='The power in the variance function of the Tweedie distribution which characterizes the relationship between the variance and mean of the distribution. Only applicable to the Tweedie family. Supported values: 0 and [1, Inf).'): 0.0,
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='predictionCol', doc='prediction column name'): 'prediction',
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='regParam', doc='regularization parameter (>= 0)'): 0.3,
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='labelCol', doc='label column name'): 'label',
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='link', doc='The name of link function which provides the relationship between the linear predictor and the mean of the distribution function. Supported options: cloglog, probit, logit, inverse, sqrt, identity, log'): 'identity',
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='tol', doc='the convergence tolerance for iterative algorithms (>= 0)'): 1e-06,
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='solver', doc='The solver algorithm for optimization. Supported options: irls. (Default irls)'): 'irls',
 Param(parent='GeneralizedLinearRegression_4cedb24f8d7d', name='maxIter', doc='maximum number of iterations (>= 0)'): 10}

Hyperparams: glr gaussian identity
+-------model-----------------------------------------+
GeneralizedLinearRegression_4407f21ea5e6
+-------params-----------------------------------------+
{Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='maxIter', doc='maximum number of iterations (>= 0)'): 10,
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='predictionCol', doc='prediction column name'): 'prediction',
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='regParam', doc='regularization parameter (>= 0)'): 0.3,
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='solver', doc='The solver algorithm for optimization. Supported options: irls. (Default irls)'): 'irls',
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='tol', doc='the convergence tolerance for iterative algorithms (>= 0)'): 1e-06,
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='variancePower', doc='The power in the variance function of the Tweedie distribution which characterizes the relationship between the variance and mean of the distribution. Only applicable to the Tweedie family. Supported values: 0 and [1, Inf).'): 0.0,
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='family', doc='The name of family which is a description of the error distribution to be used in the model. Supported options: gamma, binomial, poisson, gaussian, tweedie.'): 'gaussian',
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='featuresCol', doc='features column name'): 'features',
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='fitIntercept', doc='whether to fit an intercept term'): True,
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='labelCol', doc='label column name'): 'label',
 Param(parent='GeneralizedLinearRegression_4407f21ea5e6', name='link', doc='The name of link function which provides the relationship between the linear predictor and the mean of the distribution function. Supported options: cloglog, probit, logit, inverse, sqrt, identity, log'): 'identity'}

Hyperparams: glr poisson log
+-------model-----------------------------------------+
GeneralizedLinearRegression_175bc85ae471
+-------params-----------------------------------------+
{Param(parent='GeneralizedLinearRegression_175bc85ae471', name='predictionCol', doc='prediction column name'): 'prediction',
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='labelCol', doc='label column name'): 'label',
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='fitIntercept', doc='whether to fit an intercept term'): True,
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='link', doc='The name of link function which provides the relationship between the linear predictor and the mean of the distribution function. Supported options: cloglog, probit, logit, inverse, sqrt, identity, log'): 'log',
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='featuresCol', doc='features column name'): 'features',
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='family', doc='The name of family which is a description of the error distribution to be used in the model. Supported options: gamma, binomial, poisson, gaussian, tweedie.'): 'poisson',
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='maxIter', doc='maximum number of iterations (>= 0)'): 10,
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='tol', doc='the convergence tolerance for iterative algorithms (>= 0)'): 1e-06,
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='variancePower', doc='The power in the variance function of the Tweedie distribution which characterizes the relationship between the variance and mean of the distribution. Only applicable to the Tweedie family. Supported values: 0 and [1, Inf).'): 0.0,
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='solver', doc='The solver algorithm for optimization. Supported options: irls. (Default irls)'): 'irls',
 Param(parent='GeneralizedLinearRegression_175bc85ae471', name='regParam', doc='regularization parameter (>= 0)'): 0.3}

Hyperparams: gbt indexed features
Model for gbt indexed features could not be created.
------------------------- R E A D Y ------------ 01:21:34 --------------------
